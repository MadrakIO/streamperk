imports:
    - { resource: security.yml }
    - { resource: services.yml }

# Put parameters here that don't need to change on each machine where the app is deployed
# http://symfony.com/doc/current/best_practices/configuration.html#application-related-configuration
parameters:
    locale: en

framework:
    #esi:             ~
    translator:      { fallbacks: ["%locale%"] }
    secret:          "%secret%"
    router:
        resource: "%kernel.root_dir%/config/routing.yml"
        type: rest
        strict_requirements: ~
    form:            ~
    csrf_protection: ~
    validation:      { enable_annotations: true }
    #serializer:      { enable_annotations: true }
    templating:
        engines: ['twig']
        #assets_version: SomeVersionScheme
    default_locale:  "%locale%"
    trusted_hosts:   ~
    trusted_proxies: ~
    session:
        handler_id: session.handler.pdo
        cookie_lifetime: 0
        gc_maxlifetime: "%session_max_lifetime%"
    fragments:       ~
    http_method_override: true

# Twig Configuration
twig:
    debug:            "%kernel.debug%"
    strict_variables: "%kernel.debug%"
    form:
        resources: ['bootstrap_3_layout.html.twig']
    form_themes:
        - 'StreamPerkServerBundle:Form:fields.html.twig'

# Doctrine Configuration
doctrine:
    dbal:
        driver:   pdo_mysql
        host:     "%database_host%"
        port:     "%database_port%"
        dbname:   "%database_name%"
        user:     "%database_user%"
        password: "%database_password%"
        charset:  UTF8
        # if using pdo_sqlite as your database driver:
        #   1. add the path in parameters.yml
        #     e.g. database_path: "%kernel.root_dir%/data/data.db3"
        #   2. Uncomment database_path in parameters.yml.dist
        #   3. Uncomment next line:
        #     path:     "%database_path%"

    orm:
        auto_generate_proxy_classes: "%kernel.debug%"
        naming_strategy: doctrine.orm.naming_strategy.underscore
        auto_mapping: true

# Swiftmailer Configuration
swiftmailer:
    transport: "%mailer_transport%"
    host:      "%mailer_host%"
    username:  "%mailer_user%"
    password:  "%mailer_password%"
    spool:     { type: memory }

# OAuth Configuration
hwi_oauth:
    firewall_names: [ secured_area ]
    target_path_parameter: _destination
    resource_owners:
        twitch:
            type:          twitch
            client_id:     "%twitch_client_id%"
            client_secret: "%twitch_client_secret%"
            scope: "user_read user_subscriptions channel_check_subscription"
            options:
                csrf: true
        gamewisp:
            type:                oauth2
            class:               MadrakIO\StreamPerk\Bundle\UserBundle\OAuth\ResourceOwner\GameWispResourceOwner
            client_id:           "%gamewisp_identifier%"
            client_secret:       "%gamewisp_secret%"
            scope:               "user_read,subscriber_read_full"
            options:
                csrf: true
        beam:
            type:                oauth2
            client_id:           "%beam_client_id%"
            client_secret:       "%beam_client_secret%"
            access_token_url:    "https://beam.pro/api/v1/oauth/token"
            authorization_url:   "https://beam.pro/oauth/authorize"
            infos_url:           "https://beam.pro/api/v1/users/current"
            scope:               "user:details:self subscription:view:self channel:details:self"
            user_response_class: HWI\Bundle\OAuthBundle\OAuth\Response\PathUserResponse
            paths:
                identifier: id
                nickname:   username
                realname: username
                email:   email
            options:
                csrf: true

# LIIP Monitor Bundle Configuration
liip_monitor:
    enable_controller: false
    mailer:
        enabled: true
        recipient: "%streamperk.monitor_email_recipient%"
        sender: "%streamperk.monitor_email_sender%"
        subject: 'A Monitor Failure Occurred'
        send_on_warning: false
    checks:
        readable_directory: ["%kernel.cache_dir%"]
        writable_directory: ["%kernel.cache_dir%"]
        disk_usage:
            critical: 50
        symfony_requirements:
            file: '%kernel.root_dir%/SymfonyRequirements.php'
        doctrine_dbal: [default]
        symfony_version: ~
        security_advisory:
            lock_file: '%kernel.root_dir%/../composer.lock'

# STOF Doctrine Extensions Bundle
stof_doctrine_extensions:
    default_locale: en_US
    orm:
        default:
            sluggable: true

# MadrakIO Extendable Configuration Bundle Configuration
madrak_io_extendable_configuration:
    configuration_class: MadrakIO\StreamPerk\Bundle\CoreBundle\Entity\Configuration

# CSA Guzzle Bundle Configuration
csa_guzzle:
    clients:
        twitch_api:
            config:
                base_uri: https://api.twitch.tv/kraken/
                headers:
                    Accept: application/vnd.twitchtv.v3+json
                    Client-ID: '%twitch_client_id%'
        gamewisp_api:
            config:
                base_uri: https://api.gamewisp.com/pub/v1/
                headers:
                    Client-ID: '%gamewisp_identifier%'
        beam_api:
            config:
                base_uri: https://beam.pro/api/v1/
                headers:
                    Client-ID: '%beam_client_id%'
        tipeee_stream_api:
            config:
                base_uri: https://api.tipeeestream.com/v1.0/
        branebot_api:
            config:
                base_uri: https://branebot.com/data/
        discord_api:
            config:
                base_uri: https://discordapp.com/api/
                headers:
                    User-Agent: 'StreamPerk Bot (https://streamperk.com, v0.0.1)'
                    Client-ID: '%streamperk.discord.client_id%'
                    Authorization: '%streamperk.discord.bot_token%'
                    Content-Type: 'application/json'

# FOS Rest Bundle
fos_rest:
    zone:
        - { path: ^/api/* }
        - { path: ^/public/api/* }
    allowed_methods_listener:
        enabled:              true
    serializer:
        serialize_null:       true
    routing_loader:
      default_format: 'json'
    view:
        view_response_listener:
            enabled:              true
            force:                true
        failed_validation:    400
        empty_content:        204
        serialize_null:       true
    exception:
        enabled:              true
    format_listener:
        enabled:              true
    versioning:
        enabled: true
        resolvers:
            query:
                enabled: true
                parameter_name: version
            custom_header:
                enabled: true
                header_name: X-Accept-Version
        guessing_order:
            - query
            - custom_header

# OneUp FlySystem Bundle
oneup_flysystem:
    adapters:
        streamperk.file.s3_adapter:
            awss3v2:
                client: streamperk.file.s3_client
                bucket: "%streamperk.filesystem.s3.bucket%"
                prefix: "%streamperk.filesystem.s3.prefix%"
    filesystems:
        streamperk.filesystem:
            adapter: streamperk.file.s3_adapter
            alias: streamperk.filesystem

# Nelmio CORS Bundle
nelmio_cors:
    defaults:
        allow_credentials: false
        allow_origin: []
        allow_headers: []
        allow_methods: []
        expose_headers: []
        max_age: 0
        hosts: []
        origin_regex: false
    paths:
        '^/api/':
            allow_origin: "%streamperk.allowed_origins%"
            allow_methods: ['PATCH', 'POST', 'PUT', 'GET', 'DELETE', 'OPTIONS']
            allow_headers: ['Content-Type','Content-Length']
            max_age: 3600
            allow_credentials: true
        '^/public/api/':
            allow_origin: "%streamperk.allowed_origins%"
            allow_methods: ['POST', 'PUT', 'GET', 'DELETE', 'OPTIONS']
            allow_headers: ['Content-Type','Content-Length']
            max_age: 3600
            allow_credentials: true
